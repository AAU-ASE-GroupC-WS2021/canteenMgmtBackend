version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@1.0.3

jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Build
          command: mvn -B -DskipTests clean package
      - run:
          name: Test
          command: mvn test
      - run:
          name: Analyze on SonarCloud
          command: mvn verify sonar:sonar -Dsonar.projectKey=elsantner_canteenMgmtBackend

  build-and-deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: Install Heroku shell
          command: sudo curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: Login to Heroku container registry
          command: HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
      - run:
          name: Build and push container
          command: HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a ${HEROKU_APP_NAME} web
      - run:
          name: Deploy container
          command: HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a ${HEROKU_APP_NAME} web

  performance-tests:
    docker:
      # first `image` defines the primary container where all steps will run
      # if no `name:` is provided, services are accessible through `localhost`
      - image: cimg/openjdk:17.0
      - image: postgres
        environment:
          POSTGRES_PASSWORD: mysecretpassword
    steps:
      - checkout
      - run:
          name: Run backend
          command: mvn spring-boot:run
          background: true
      - run:
          name: Install Java 11
          command: sudo apt-get -y update && sudo apt-get -y install openjdk-11-jdk-headless
      # wait for the server to start responding. We expect Bad Request 400 once it starts listening.
      # so override the shell and have the last command be the : { null } command to force exit code 0.
      - run:
          name: Wait for backend to start
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=2 --read-timeout=20 --timeout=15 -t 20 http://localhost:8080/
            :
      - run:
          name: Run performance tests
          command: |
            export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))
            mvn verify -Pperformance -f pom.xml
      - store_artifacts:
          path: target/jmeter/reports

workflows:
  main:
    jobs:
      #- build-and-test:
      #    context: SonarCloud
      - performance-tests
      #- build-and-deploy:
      #    context: Heroku-<< pipeline.git.branch >>
      #    requires:
      #      # Deploy after testing.
      #      - build-and-test
      #    filters:
      #      branches:
      #        only:
      #          - main
      #          - development
